#!/bin/bash

function start_enum_domain
{
	show_banner
	echo -e "[*] Starting enumeration for $DOMAIN..\n"
	read -p "[*] Enumerate $DOMAIN? [y/N] >> " getopt

	case $getopt in
		[yY]|[yY][eE][sS])
			enumerate_domain
			;;
		[nN]|[nN][oO])
			show_menu
			;;
		*)
			start_enum_domain
			;;
	esac
}

function start_ping_sweep
{
	show_banner
	echo -e "[*] Starting ping sweep for $HOST.0..\n" | cut -d'.' -f1-3,5-7
	read -p "[*] Perform ping sweep? [y/N] >> " getopt

	case $getopt in
		[yY]|[yY][eE][sS])
			ping_sweep
			;;
		[nN]|[nN][oO])
			show_menu
			;;
		*)
			start_ping_sweep
			;;
	esac
}

function start_port_scan
{
	show_banner
	echo -e "[*] Start port scan for $HOST..\n" 
	read -p "[*] Perform port scan? (1-$PORT)? [y/N] >> " getopt

	case $getopt in
		[yY]|[yY][eE][sS])
			scanning_options
			;;
		[nN]|[nN][oO])
			show_menu
			;;
		*)
			start_port_scan
			;;

	esac
}

function start_nmap_scan
{
	show_banner
	echo -e "[*] Start nmap scan for $HOST..\n"
	read -p "[*] Perform port scan using nmap? [y/N] >> " getopt

	case $getopt in
		[yY]|[yY][eE][sS])
			nmap_scan_options
			;;
		[nN]|[nN][oO])
			show_menu
			;;
		*)
			start_nmap_scan
			;;
	esac
}

function scanning_options
{
	read -p "[*] Show only open ports? [y/n] >> " getopt

	case $getopt in
		[yY]|[yY][eE][sS])
			OPEN=1
			port_scan
			;;
		[nN]|[nN][oO])
			OPEN=0
			port_scan_warning
			;;
		*)
			scanning_options
			;;
	esac
}

function nmap_scan_options 
{
	echo -e "\nNMAP Defaults:\n
TCP Scan = $TCPSCAN
Agressive Scan = $AGGRESSIVE
Run Default Scripts = $DEFAULTSCRIPTS
Perform OS Scan = $OSSCAN
Perform Service Scan = $SERVICESCAN
Verbose Scanning = $VERBOSE
Timing = "$TIMING"
"
	read -p "[*] Read nmap options on the configuration file? [y/N] >> " getopt
	
	case $getopt in
		[yY]|[yY][eE][sS])
			nmap_scan
			;;
		[nN]|[nN][oO])
			select_nmap_options
			;;
		*)
			nmap_scan_options
			;;
	esac
}

function save_to_file
{
	read -p "[*] Save output to file? [y/N] >> " getopt

	case $getopt in
		[yY]|[yY][eE][sS])
			SAVE=1
			;;
		[nN]|[nN][oO])
			SAVE=0
			;;
		*)
			save_to_file
			;;

	esac
}

function enumerate_domain
{
	save_to_file

	if [[ $SAVE -eq 0 ]]; then
		enumerate_domain_nosave
	else
		enumerate_domain_save
	fi
}

function ping_sweep
{
	save_to_file

	if [[ $SAVE -eq 0 ]]; then
		ping_sweep_nosave
	else
		ping_sweep_save
	fi
}

function port_scan
{
	save_to_file

	if [[ $SAVE -eq 0 ]]; then
		port_scan_nosave
	else
		port_scan_save
	fi
}

function select_nmap_options
{
	function scantype {
		read -p "[*] TCP or UDP scan? [tcp/udp] >> " getopt

		case $getopt in
			[tT][cC][pP])
				;;
			[uU][dD][pP])
				TCPSCAN=false
				;;
			*)
				scantype
				;;
		esac
	}

	function defaultscripts {
		read -p "[*] Run Default Scripts? [y/N] >> " getopt

		case $getopt in
			""|[yY]|[yY][eE][sS])
				;;
			[nN]|[nN][oO])
				DEFAULTSCRIPTS=false
				;;
			*)
				select_nmap_options
				;;
		esac
	}
	
	function servicescan {
		read -p "[*] Perform Service Scans? [y/N] >> " getopt

		case $getopt in
			""|[yY]|[yY][eE][sS])
				;;
			[nN]|[nN][oO])
				SERVICESCAN=false
				;;
			*)
				defaultscripts
				;;
		esac
	}

	function osscan {
		read -p "[*] Perform OS Scan? [y/N] >> " getopt

		case $getopt in
			""|[yY]|[yY][eE][sS])
				;;
			[nN]|[nN][oO])
				OSSCAN=false
				;;
			*)
				osscan
				;;
		esac
	}

	function aggrescan {
		read -p "[*] Perform Aggresive Scan [y/N] >> " getopt
		
		case $getopt in
			""|[yY]|[yY][eE][sS])
				;;
			[nN]|[nN][oO])
				AGGRESSIVE=false
				;;
			*)
				aggrescan
				;;
		esac
	}
	
	function allports {
		read -p "[*] Scan all ports? (1-65535) [y/N] >> " getopt
		
		case $getopt in
			""|[yY]|[yY][eE][sS])
				ALLPORTS=true
				;;
			[nN]|[nN][oO])
				ALLPORTS=false
				;;
			*)
				allports
				;;
		esac
	}

	function timing {
		read -p "[*] Set timing [1-5] >> " getopt

		case $getopt in
			1)
				TIMING=1
				;;
			2)
				TIMING=2
				;;
			3)
				TIMING=3
				;;
			4)
				TIMING=4
				;;
			5)
				TIMING=5
				;;
			*)
				timing
				;;
		esac
	}

	# Call functions

	scantype
	defaultscripts
	servicescan
	osscan
	aggrescan
	allports
	timing	
	
	nmap_scan
}

function nmap_scan
{
	save_to_file

	echo -e "\n[+] Executing Nmap.. Scanning Ports..\n"

	if [[ $TCPSCAN == 'false' ]]; then
		TCPSCAN='-sU'
	else
		TCPSCAN=''
	fi

	if [[ $DEFAULTSCRIPTS == 'true' ]]; then
		DEFAULTSCRIPTS='-sC'
	else
		DEFAULTSCRIPTS=''
	fi

	if [[ $SERVICESCAN == 'true' ]]; then
		SERVICESCAN='-sV'
	else
		SERVICESCAN=''
	fi

	if [[ $OSSCAN == 'true' ]]; then
		OSSCAN='-O'
	else
		OSSCAN=''
	fi

	if [[ $AGGRESSIVE == 'true' ]]; then
		AGGRESSIVE='-A'
	else
		AGGRESSIVE=''
	fi

	if [[ $ALLPORTS == 'true' ]]; then
		ALLPORTS='-p-'
	else
		ALLPORTS=''
	fi

	# Perform nmap scan

	if [[ $SAVE -eq 0 ]]; then
		sudo nmap $TCPSCAN $SERVICESCAN $DEFAULTSCRIPTS $AGGRESSIVE \
		$OSSCAN -T$TIMING $HOST $ALLPORTS -v

		echo -e "\n[+] Done.\n"
		read -p ">> " getopt
		
		case $getopt in
			*)
				show_menu
				;;
		esac
	else
		mkdir -p $path/output/nmap/nmap-$HOST

		sudo nmap $TCPSCAN $SERVICESCAN $DEFAULTSCRIPTS $AGGRESSIVE \
		$OSSCAN -T$TIMING $HOST $ALLPORTS -v -oA $path/output/nmap/nmap-$HOST/$HOST

		echo -e "\n[+] Done. Data saved on $(realpath nmap-$HOST)\n"
		read -p ">> " getopt

		case $getopt in
			*)
				show_menu
				;;
		esac
	fi	
}
